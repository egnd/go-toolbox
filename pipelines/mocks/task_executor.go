// Code generated by mockery v2.22.1. DO NOT EDIT.

package mocks

import (
	pipelines "github.com/egnd/go-toolbox/pipelines"
	mock "github.com/stretchr/testify/mock"
)

// TaskExecutor is an autogenerated mock type for the TaskExecutor type
type TaskExecutor struct {
	mock.Mock
}

// Execute provides a mock function with given fields: _a0
func (_m *TaskExecutor) Execute(_a0 pipelines.Task) error {
	ret := _m.Called(_a0)

	var r0 error
	if rf, ok := ret.Get(0).(func(pipelines.Task) error); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

type mockConstructorTestingTNewTaskExecutor interface {
	mock.TestingT
	Cleanup(func())
}

// NewTaskExecutor creates a new instance of TaskExecutor. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewTaskExecutor(t mockConstructorTestingTNewTaskExecutor) *TaskExecutor {
	mock := &TaskExecutor{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
